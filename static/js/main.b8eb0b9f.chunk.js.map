{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["timePoints","parsed","queryString","parse","window","location","search","TOTAL_TARGET","target","parseInt","TIME_POINTS","points","_","range","timeParting","sortBy","uniq","map","random","Math","floor","item","getIdealFrontLoadedPacingLine","difference","chunk","length","firstTercile","secondTercile","thirdTercile","remainder","concat","firstElementOfThirdTercile","take","yValueMapping","firstTercileDelivery","secondTercileDelivery","thirdTercileDelivery","each","index","plot","lastValue","includes","push","markArea","name","xAxis","getIdealEvenPacingLine","idealEvenPacing","idealEvenPacingWithParting","idealEvenPacingWithPartingMarkArea","idealFrontLoadedPacing","idealFrontLoadedPacingWithParting","idealFrontLoadedPacingWithPartingMarkArea","opts","width","height","App","className","option","override","series","type","clip","symbol","data","title","text","left","grid","top","right","bottom","tooltip","trigger","axisPointer","animation","label","backgroundColor","borderColor","borderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","color","legend","max","minorTick","show","yAxis","min","notMerge","lazyUpdate","theme","onChartReady","onEvents","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8eb0b9f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactEcharts from 'echarts-for-react';\nimport _ from 'lodash';\nimport queryString from 'query-string';\n\nconst parsed = queryString.parse(window.location.search);\n\nconst TOTAL_TARGET = parsed.target ? parseInt(parsed.target) : 100;\nconst TIME_POINTS = parsed.points ? parseInt(parsed.points) : 24;\n\nconst getTimeParting = (timePoints) => {\n  if (timePoints < 40) {\n    return _.sortBy(_.uniq(_.map(_.range(_.random(1, Math.floor(timePoints / 2))), item => _.random(0, timePoints))));\n  }\n\n  let out = _.sortBy(_.uniq(_.map(_.range(_.random(1, 10)), item => _.random(0, timePoints))));\n\n  return out;\n}\n\nconst getTimePoints = (timePoints) => {\n  return _.range(1, TIME_POINTS + 1);\n}\n\nconst timePoints = getTimePoints(TIME_POINTS);\nconst timeParting = getTimeParting(TIME_POINTS);\n\nconst getIdealFrontLoadedPacingLine = ({ timePoints, timeParting }) => {\n  const difference = _.difference(timePoints, timeParting);\n  let [firstTercile, secondTercile, thirdTercile, remainder] = _.chunk(difference, Math.floor(difference.length / 3));\n\n  if (remainder) {\n    thirdTercile = _.concat(thirdTercile, remainder);\n    if (remainder.length === 2) {\n      const firstElementOfThirdTercile = _.take(thirdTercile);\n      thirdTercile = _.difference(thirdTercile, firstElementOfThirdTercile);\n      secondTercile = _.concat(secondTercile, firstElementOfThirdTercile);\n    }\n  }\n\n  const yValueMapping = {};\n\n  const firstTercileDelivery = TOTAL_TARGET * 0.5;\n  const secondTercileDelivery = TOTAL_TARGET * 0.3;\n  const thirdTercileDelivery = TOTAL_TARGET * 0.2;\n\n  _.each(firstTercile, (item, index) => {\n    yValueMapping[item] = firstTercileDelivery * ((index + 1) / firstTercile.length);\n  });\n\n  _.each(secondTercile, (item, index) => {\n    yValueMapping[item] = secondTercileDelivery * ((index + 1) / secondTercile.length) + firstTercileDelivery;\n  });\n\n  _.each(thirdTercile, (item, index) => {\n    yValueMapping[item] = thirdTercileDelivery * ((index + 1) / thirdTercile.length) + firstTercileDelivery + secondTercileDelivery;\n  });\n\n  const plot = [[0, 0]];\n  let lastValue = 0;\n\n  _.each(timePoints, item => {\n    if (!_.includes(timeParting, item)) {\n      lastValue = yValueMapping[item];\n    }\n    plot.push([item, lastValue]);\n  })\n\n  const markArea = _.map(timeParting, item => {\n    return [\n      {\n        name: (item > 0 && timePoints.length < 40) ? item : \"\",\n        xAxis: item - 1,\n      },\n      {\n        xAxis: item\n      }\n    ];\n  });\n\n  return {\n    plot,\n    markArea\n  }\n};\n\nconst getIdealEvenPacingLine = ({ timePoints, timeParting }) => {\n  const difference = _.difference(timePoints, timeParting);\n\n  const yValueMapping = {};\n\n  _.each(difference, (item, index) => {\n    yValueMapping[item] = TOTAL_TARGET * ((index + 1) / difference.length);\n  });\n\n  const plot = [[0, 0]];\n  let lastValue = 0;\n\n  _.each(timePoints, item => {\n    if (!_.includes(timeParting, item)) {\n      lastValue = yValueMapping[item];\n    }\n    plot.push([item, lastValue]);\n  });\n\n  const markArea = _.map(timeParting, item => {\n    return [\n      {\n        name: (item > 0 && timePoints.length < 40) ? item : \"\",\n        xAxis: item - 1,\n      },\n      {\n        xAxis: item\n      }\n    ];\n  });\n\n  return {\n    plot,\n    markArea\n  }\n}\n\nconst { plot: idealEvenPacing } = getIdealEvenPacingLine({\n  timePoints,\n  timeParting: []\n});\n\nconst {\n  plot: idealEvenPacingWithParting,\n  markArea: idealEvenPacingWithPartingMarkArea\n} = getIdealEvenPacingLine({\n  timePoints,\n  timeParting\n});\n\nconst { plot: idealFrontLoadedPacing } = getIdealFrontLoadedPacingLine({\n  timePoints,\n  timeParting: []\n});\n\nconst {\n  plot: idealFrontLoadedPacingWithParting,\n  markArea: idealFrontLoadedPacingWithPartingMarkArea\n} = getIdealFrontLoadedPacingLine({\n  timePoints,\n  timeParting\n});\n\nconst getOption = (override) => {\n    return {\n      title: {\n        text: 'Ideal Progress Graph Examples',\n        left: 'center'\n      },\n      grid: {\n        top: 100,\n        left: 50,\n        right: 40,\n        bottom: 50\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          animation: false,\n          label: {\n            backgroundColor: '#ccc',\n            borderColor: '#aaa',\n            borderWidth: 1,\n            shadowBlur: 0,\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            color: '#222'\n          }\n        }\n      },\n      legend: {\n        data: [\n          'Ideal Even Pacing',\n          'Ideal Even Pacing (with Parting)',\n          'Ideal Front-loaded Pacing',\n          'Ideal Front-loaded Pacing (with Parting)'\n        ],\n        left: 10,\n        top: 40,\n      },\n      xAxis: {\n        name: 'x',\n        max: TIME_POINTS,\n        minorTick: {\n          show: true\n        },\n      },\n      yAxis: {\n        name: 'y',\n        min: 0,\n        max: TOTAL_TARGET,\n        minorTick: {\n          show: true\n        },\n      },\n      ...override\n    }\n};\n\nconst opts = {\n  width: 'auto',\n  height: '750px',\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"chart\">\n        <ReactEcharts\n          option={getOption({\n            series: [\n              {\n                name: 'Ideal Even Pacing',\n                type: 'line',\n                clip: true,\n                symbol: 'none',\n                data: idealEvenPacing\n              },\n              {\n                name: 'Ideal Even Pacing (with Parting)',\n                type: 'line',\n                clip: true,\n                symbol: 'none',\n                data: idealEvenPacingWithParting,\n                markArea: {\n                  data: idealEvenPacingWithPartingMarkArea\n                }\n              },\n              {\n                name: 'Ideal Front-loaded Pacing',\n                type: 'line',\n                clip: true,\n                symbol: 'none',\n                data: idealFrontLoadedPacing\n              },\n              {\n                name: 'Ideal Front-loaded Pacing (with Parting)',\n                type: 'line',\n                clip: true,\n                symbol: 'none',\n                data: idealFrontLoadedPacingWithParting,\n                markArea: {\n                    data: idealFrontLoadedPacingWithPartingMarkArea\n                }\n              },\n            ]\n          })}\n          notMerge={true}\n          lazyUpdate={true}\n          theme={\"theme_name\"}\n          onChartReady={() => {}}\n          onEvents={{}}\n          opts={opts} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}